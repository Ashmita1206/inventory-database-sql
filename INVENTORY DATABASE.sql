--DATABASE CREATION--
CREATE DATABASE INVENTORY;
--USE OF THE DATABASE--
USE INVENTORY;
--CREATION OF THE REQUIRED TABLES INTO THE DATABASE INVENTORY--
CREATE TABLE SUPPLIER
(
SID CHAR(5) PRIMARY KEY,
SNAME VARCHAR(50) NOT NULL,
SADD VARCHAR(50) NOT NULL,
SCITY VARCHAR(20) NOT NULL,
SPHONE CHAR(15) UNIQUE,
EMAIL VARCHAR(30)
);
CREATE TABLE PRODUCT
(
PID CHAR(5) PRIMARY KEY,
PDESC VARCHAR(50) NOT NULL,
PRICE INT CHECK(PRICE>0),
CATEGORY CHAR(2) CHECK(CATEGORY IN ('IT','HA','HC')),
SID CHAR(5) --FOREIGN KEY(SUPPLIER)(DOUBT)-- 
);
ALTER TABLE PRODUCT
ADD CONSTRAINT FKID FOREIGN KEY (SID) REFERENCES SUPPLIER(SID);

CREATE TABLE CUSTOMER
(
CID CHAR(5) PRIMARY KEY,
CNAME VARCHAR(50) NOT NULL,
ADDRESS VARCHAR(50) NOT NULL,
CITY VARCHAR(20) NOT NULL,
PHONE CHAR(15) NOT NULL,
EMAIL VARCHAR(30) NOT NULL,
DOB DATE CHECK( DOB < '1-01-2000')
);

CREATE TABLE STOCK
(
PID CHAR(5) REFERENCES PRODUCT(PID),
SQTY INT CHECK(SQTY>=0),
ROL INT CHECK(ROL>0),
MOQ INT CHECK(MOQ>=5),

);

CREATE TABLE ORDERS
(
OID CHAR(5) PRIMARY KEY,
ODATE DATE ,
PID CHAR(5) REFERENCES PRODUCT(PID),
CID CHAR(5) REFERENCES CUSTOMER(CID),
OQTY INT CHECK(OQTY>=1)
);

CREATE TABLE PURCHASE
(
PID CHAR(5) REFERENCES PRODUCT(PID),
SID CHAR(5) REFERENCES SUPPLIER(SID),
PQTY INT,
DOP DATE
);
--INSERTION OF THE REQUIRED RECORDS INTO THE TABLE---

INSERT INTO SUPPLIER (SID, SNAME, SADD, SCITY, SPHONE, EMAIL) VALUES
('S0001', 'Ramesh Kumar', '123 MG Road', 'Mumbai', '9876543210', 'ramesh.kumar@gmail.com'),
('S0002', 'Priya Sharma', '45 Connaught Place', 'Delhi', '9876543211', 'priya.sharma@yahoo.com'),
('S0003', 'Amit Verma', '67 Nehru Street', 'Chennai', '9876543212', 'amit.verma@gmail.com'),
('S0004', 'Neha Singh', '89 Park Avenue', 'Kolkata', '9876543213', 'neha.singh@gmail.com'),
('S0005', 'Vikram Rao', '12 Station Road', 'Bengaluru', '9876543214', 'vikram.rao@gmail.com'),
('S0006', 'Sunita Mehta', '56 Civil Lines', 'Lucknow', '9876543215', 'sunita.mehta@gmail.com'),
('S0007', 'Rajesh Gupta', '34 Green Street', 'Pune', '9876543216', 'rajesh.gupta@yahoo.com'),
('S0008', 'Anjali Nair', '78 Hill View', 'Hyderabad', '9876543217', 'anjali.nair@yahoo.co.in'),
('S0009', 'Kiran Patel', '90 Gandhi Road', 'Ahmedabad', '9876543218', 'kiran.patel@gmail.com'),
('S0010', 'Deepak Malhotra', '23 Circular Road', 'Chandigarh', '9876543219', 'deepak.malhotra@gmail.com');

SELECT *
FROM SUPPLIER;

INSERT INTO PRODUCT (PID, PDESC, PRICE, CATEGORY, SID) VALUES
('P0001', 'Dell Laptop', 70000, 'IT', 'S0001'),
('P0002', 'Samsung Fridge', 45000, 'HA', 'S0002'),
('P0003', 'Sony TV', 60000, 'HA', 'S0003'),
('P0004', 'Philips Trimmer',1500, 'HC', 'S0004'),
('P0005', 'Mi Air Purifier',12000, 'HC', 'S0005'),
('P0006', 'HP Laptop',55000, 'IT', 'S0006'),
('P0007', 'LG Washing Machine',30000, 'HA', 'S0007'),
('P0008', 'Apple iPad', 45000, 'IT', 'S0008'),
('P0009', 'Bajaj Mixer',5000, 'HA', 'S0009'),
('P0010', 'Fitbit Charge',10000, 'HC', 'S0008'),
('P0011', 'Canon Printer', 20000, 'IT', 'S0001'),
('P0012', 'Prestige Cooker',2500, 'HA', 'S0002'),
('P0013', 'BP Monitor', 3500, 'HC', 'S0003'),
('P0014', 'Lenovo ThinkPad', 80000, 'IT', 'S0001'),
('P0015', 'Haier AC',38000, 'HA', 'S0005'),
('P0016', 'OnePlus Monitor',30000, 'IT', 'S0003'),
('P0017', 'V-Guard Stabilizer',2500, 'HA', 'S0001'),
('P0018', 'Dr. Trust Oximeter',2000, 'HC', 'S0009'),
('P0019', 'Dell XPS',90000, 'IT', 'S0004'),
('P0020', 'Whirlpool Refrigerator',75000, 'HA', 'S0010');

SELECT *
FROM PRODUCT ;

INSERT INTO CUSTOMER (CID, CNAME, ADDRESS, CITY, PHONE, EMAIL, DOB) VALUES
('C0001', 'Amit Kumar', '123 Park Street', 'Delhi', '9876543210', 'amit.kumar@gmail.com', '15-MAY-1995'),
('C0002', 'Priya Sharma', '45 MG Road', 'Mumbai', '9876543211', 'priya.sharma@yahoo.com', '10-APRIL-1997'),
('C0003', 'Rahul Verma', '67 Nehru Nagar', 'Kolkata', '9876543212', 'rahul.verma@hotmail.com', '25-AUGUST-1998'),
('C0004', 'Neha Singh', '89 Hill View', 'Bengaluru', '9876543213', 'neha.singh@gmail.com', '15-DECEMBER-1994'),
('C0005', 'Vikram Rao', '12 Station Road', 'Chennai', '9876543214', 'vikram.rao@gmail.com', '20-AUGUST-1993'),
('C0006', 'Sunita Mehta', '56 Civil Lines', 'Lucknow', '9876543215', 'sunita.mehta@gmail.com', '05-NOVEMBER-1999'),
('C0007', 'Rajesh Gupta', '34 Green Street', 'Ahmedabad', '9876543216', 'rajesh.gupta@yahoo.com', '30-JUNE-1996'),
('C0008', 'Anjali Nair', '78 Sunset Blvd', 'Hyderabad', '9876543217', 'anjali.nair@hotmail.com', '22-JANUARY-1992'),
('C0009', 'Kiran Patel', '90 Gandhi Road', 'Pune', '9876543218', 'kiran.patel@gmail.com', '10-SEPTEMBER-1991'),
('C0010', 'Deepak Malhotra', '23 Circular Road', 'Chandigarh', '9876543219', 'deepak.malhotra@gmail.com', '18-APRIL-1990');

SELECT *
FROM CUSTOMER;

INSERT INTO STOCK (PID, SQTY, ROL, MOQ) VALUES
('P0001', 50, 10, 15),
('P0012', 30, 5, 10),
('P0009', 20, 8, 12),
('P0007', 100, 15, 20),
('P0003', 70, 12, 18),
('P0002', 25, 7, 10),
('P0013', 0, 10, 15),   
('P0018', 45, 9, 12),
('P0019', 60, 10, 15),
('P0010', 15, 5, 10);

SELECT *
FROM STOCK;

INSERT INTO ORDERS (OID, ODATE, PID, CID, OQTY) VALUES
('O0001', '01-Dec-2024', 'P0011', 'C0001', 10),
('O0002', '02-Dec-2024', 'P0002', 'C0010', 5),
('O0003', '03-Dec-2023', 'P0015', 'C0009', 8),
('O0004', '04-Dec-2023', 'P0020', 'C0004', 15),
('O0005', '05-Dec-2023', 'P0003', 'C0008', 20);
SELECT *
FROM ORDERS;

SELECT *
FROM PURCHASE;

SELECT*
FROM PRODUCT;

--QUESTIONS--
--1--
SELECT PID,PDESC,CATEGORY,SNAME,SCITY 
FROM PRODUCT
INNER JOIN SUPPLIER
ON PRODUCT.SID=SUPPLIER.SID;

--2--
SELECT ORDERS.OID,ORDERS.ODATE,CUSTOMER.CNAME,CUSTOMER.ADDRESS,CUSTOMER.PHONE,PRODUCT.PDESC,PRODUCT.PRICE,ORDERS.OQTY,PRODUCT.PRICE*ORDERS.OQTY AS 'AMOUNT'
FROM ORDERS 
INNER JOIN PRODUCT
ON ORDERS.PID=PRODUCT.PID
INNER JOIN CUSTOMER
ON ORDERS.CID=CUSTOMER.CID;

--CREATION OF VIEWS-

--IN THE INVENTORY STRUCTURE GENERATE A VIEW BILL. IT SHOULD DISPLAY OID,ODATE,CNAME,ADDRESS,PHONE,PDESC, PRICE, OQTY, AMOUNT--
CREATE VIEW BILL
AS	
	SELECT ORDERS.OID,ORDERS.ODATE,CUSTOMER.CNAME,CUSTOMER.ADDRESS,CUSTOMER.PHONE,PRODUCT.PDESC,PRODUCT.PRICE,ORDERS.OQTY,PRODUCT.PRICE*ORDERS.OQTY AS 'AMOUNT'
	FROM ORDERS 
	INNER JOIN PRODUCT
	ON ORDERS.PID=PRODUCT.PID
	INNER JOIN CUSTOMER
	ON ORDERS.CID=CUSTOMER.CID;
SELECT *
FROM BILL;

--CREATION OF A FUNCTION--
--A-1 : CREATE A FUNCTION FOR AUTOGENERATION OF 5 CHARACTERS ALPHA NUMERIC ID. IT SHOULD ACCEPT 2 PARAMETERS A CHARACTER AND THE NUMBER AND RETURN THE ID BY CONCANATING THE CHARACTER , REQUIRED ZEROS AND THE SPECIFIED NUMBER.--
CREATE FUNCTION IDGEN (@CH AS CHAR(1),@I AS INT)
RETURNS CHAR(5)
AS
BEGIN
	DECLARE @ID AS CHAR(5);
	IF @I <10
		SET @ID = CONCAT(@CH,'000' , @I);
	ELSE IF @I<100
		SET @ID  = CONCAT(@CH, '00' , @I);
	ELSE IF @I <1000
		SET @ID  = CONCAT(@CH,'0', @I);
	ELSE IF @I <10000
		SET @ID  = CONCAT(@CH, @I);
	ELSE
		SET @ID = 'NA';
	RETURN @ID;
END;

--SHOW TABLES-- 

--TABLES--
SELECT *
FROM SUPPLIER;
SELECT *
FROM CUSTOMER;
SELECT *
FROM PRODUCT;
SELECT *
FROM ORDERS;
SELECT *
FROM STOCK ;
SELECT *
FROM PURCHASE;

--CREATION OF SEQUENCES--
CREATE SEQUENCE SUPPLIERID
AS INT                            --SUPPLIER TABLE ID--
START WITH 10
INCREMENT BY 1;
DROP SEQUENCE SUPPLIERID;
SELECT NEXT VALUE FOR SUPPLIERID;
SELECT*FROM SUPPLIER;


CREATE SEQUENCE PRODUCTID
AS INT                            --PRODUCT TABLE ID--
START WITH 20
INCREMENT BY 1;
DROP SEQUENCE PRODUCTID ;
SELECT NEXT VALUE FOR PRODUCTID;

CREATE SEQUENCE CUSTOMERID
AS INT                            --CUSTOMER TABLE ID--
START WITH 10
INCREMENT BY 1;
DROP SEQUENCE CUSTOMERID;
SELECT NEXT VALUE FOR CUSTOMERID;

CREATE SEQUENCE ORDERID
AS INT                            --ORDER TABLE ID--
START WITH 5
INCREMENT BY 1;
DROP SEQUENCE ORDERID;
SELECT NEXT VALUE FOR ORDERID;

--CREATE PROCEDURES IN THE INVENTORY DATABASE AS SPECIFIED (ALL THE ID'S SHOULD BE AUTOMATICALLY GENERATED USING ABOVE CREATED FUNCTION AND SEQUENCES) --

--ADDSUPPLIER – SHOULD ADD THE SUPPLIER IN THE SUPLIER TABLE AND DISPLAY THE DETAILS OF THE NEW SUPPLIER ADDED.--
CREATE PROCEDURE ADDSUPPLIER @N AS VARCHAR(30), @A AS VARCHAR(30), @C AS VARCHAR(30), @PH AS CHAR(15), @EM AS VARCHAR(50)
AS
BEGIN
	DECLARE @ID AS INT;
	SET @ID =(NEXT VALUE FOR SUPPLIERID);
	DECLARE @CH AS CHAR(5);
	SET @CH = DBO.IDGEN('S',@ID);
	INSERT INTO SUPPLIER(SID, SNAME, SADD, SCITY, SPHONE, EMAIL) VALUES (@CH,@N,@A,@C,@PH,@EM);
	SELECT * FROM SUPPLIER;
END;

--ADDPRO – SHOULD ADD THE PRODUCT IN THE PRODUCT TABLE AND DISPLAY THE DETAILS OF THE NEW PRODUCT ADDED.--
CREATE PROCEDURE ADDPRO @D AS VARCHAR(30),@P AS INT, @C AS CHAR(2),@SID AS CHAR(5)
AS
BEGIN
	DECLARE @ID AS INT;
	SET @ID =(NEXT VALUE FOR PRODUCTID);
	DECLARE @CH AS CHAR(5);
	SET @CH = DBO.IDGEN('P',@ID);
	INSERT INTO PRODUCT(PID, PDESC, PRICE, CATEGORY, SID) VALUES (@CH,@D,@P,@C,@SID);
	SELECT * FROM PRODUCT;
END;

--ADDCUST – SHOULD ADD THE CUSTOMER IN THE CUSTOMER TABLE AND DISPLAY THE DETAILS OF THE NEW CUSTOMER ADDED.--
CREATE PROCEDURE ADDCUST @N AS VARCHAR(30), @A AS VARCHAR(30), @C AS VARCHAR(30), @PH AS CHAR(15), @EM AS VARCHAR(50) , @DOB AS DATE
AS
BEGIN
	DECLARE @ID AS INT;
	SET @ID =(NEXT VALUE FOR CUSTOMERID);
	DECLARE @CH AS CHAR(5);
	SET @CH = DBO.IDGEN('C',@ID);
	INSERT INTO CUSTOMER(CID, CNAME, ADDRESS, CITY, PHONE, EMAIL, DOB) VALUES (@CH,@N,@A,@C,@PH,@EM,@DOB);
	SELECT * FROM CUSTOMER;
END;
 
--ADDORDER – SHOULD ADD THE ORDER IN THE ORDERS TABLE AND DISPLAY THE DETAILS OF THE ORDER. ORDER DATE SHOULD BE CURRENT DATE AND SHOULD COME AUTOMATICALLY.--
CREATE PROCEDURE ADDORDER @PID AS CHAR (5),@CID AS CHAR (5),@QTY AS INT
AS
BEGIN
	DECLARE @ID AS INT;
	SET @ID =(NEXT VALUE FOR ORDERID);
	DECLARE @CH AS CHAR(5);
	SET @CH = DBO.IDGEN('O',@ID);
	INSERT INTO ORDERS(OID, ODATE, PID, CID, OQTY) VALUES (@CH,GETDATE(),@PID,@CID,@QTY);
	SELECT* FROM ORDERS;
END;


--TO CHECK THE ABOVE PROCEDURES--(USED)
ADDSUPPLIER 'VISHESH KUMAR','ROHINI SEC 7','DELHI','768649635','VISH1234@GMAIL.COM';
ADDPRO 'MICROWAVE' , 50000 , 'HA','S0005';
ADDCUST 'ROHAN VERMA' , 'PITAMPURA' , 'DELHI' , '6578945632' , 'ROHAN27@GMAIL.COM','23-APRIL-1996';
ADDORDER 'P0012','C0006',20;
UPDATE ORDERS
SET OQTY = 60
WHERE CID = 'C0006';

--TABLES VIEW--
SELECT *
FROM SUPPLIER;
SELECT *
FROM CUSTOMER;
SELECT *
FROM PRODUCT;
SELECT *
FROM ORDERS;
SELECT *
FROM STOCK ;
SELECT *
FROM PURCHASE;

--TRIGGERS--

--CREATION OF TRIGGER FOR DELETION OF THE PRODUCT STOCK WITH THE DELETION OF PRODUCT--
CREATE TRIGGER TRIGGER_PRO
ON PRODUCT
FOR DELETE 
AS
BEGIN
	DELETE FROM STOCK
	WHERE PID = (SELECT PID FROM DELETED);

END;

--CREATION OF TRIGGER FOR STOCK UPDATION ON ANY ORDER PLACEMENT CHANGES--
CREATE TRIGGER TRIGGER_STOCK
ON ORDERS
FOR UPDATE
AS
BEGIN
	DECLARE @OQ AS INT;
	DECLARE @NQ AS INT;
	DECLARE @AQ AS INT;
	DECLARE @PID AS CHAR(5);

	SET @AQ = (SELECT STOCK.SQTY FROM STOCK WHERE PID = @PID); 
	SET @OQ = (SELECT OQTY FROM DELETED);
	SET @NQ = (SELECT OQTY FROM INSERTED);
	SET @PID = (SELECT PID FROM INSERTED);

	IF @AQ+@OQ-@NQ<=@AQ
		UPDATE STOCK 
		SET SQTY = SQTY + @OQ -@NQ
		WHERE PID = (SELECT PID FROM INSERTED);
	ELSE
		PRINT('INSUFFICIENT STOCK. UPDATE REJECTED.');
END;
DROP TRIGGER TRIGGER_STOCK;
--CREATION OF TRIGGER FOR CHECKING THE QUANTITY SUFFICIENCY--
CREATE TRIGGER TRIGGER_ORD_ACC
ON ORDERS
FOR INSERT
AS
BEGIN
	SET NOCOUNT ON;
	DECLARE @QR AS INT;
	DECLARE @QS AS INT;
	DECLARE @RL AS INT;
	DECLARE @MQ AS INT;
	DECLARE @PI AS CHAR(5);
	DECLARE @SI AS CHAR(5);
	
	SET @PI = (SELECT PID FROM INSERTED);
	SET @MQ = (SELECT MOQ FROM STOCK WHERE PID = @PI);
	SET @RL = (SELECT ROL FROM STOCK WHERE PID = @PI);
	SET @SI = (SELECT SID FROM PRODUCT WHERE PID = @PI);
	SET @QR = (SELECT OQTY FROM INSERTED);
	SET @QS = (SELECT SQTY FROM STOCK WHERE PID = (SELECT PID FROM INSERTED));
	

	IF @QS >= @QR
		BEGIN
			UPDATE STOCK SET SQTY = SQTY  - @QR
			WHERE PID = (SELECT PID FROM INSERTED);
			SET @QS = (SELECT SQTY FROM STOCK WHERE PID = (SELECT PID FROM INSERTED));
			
			IF @QS <= @RL
				BEGIN
					INSERT INTO PURCHASE
					VALUES(@PI, @SI, @MQ, GETDATE());
				END;	
			COMMIT;
			PRINT('ORDER ACCEPTED');
		END;
	ELSE
		BEGIN 
			ROLLBACK;	
			PRINT('INSUFFICIENT QUANTITY....ORDER REJECTED');			
		END;
END;

SELECT*FROM ORDERS;
SELECT *FROM STOCK;
SELECT *FROM PURCHASE;
DELETE FROM ORDERS
WHERE OID = 'O0012' ;

ADDORDER 'P0010','C0006',60;
ADDORDER 'P0010','C0006',10;
ADDORDER 'P0001','C0006',10;
ADDORDER 'P0010','C0006',10;

--PROCEDURES-- 

--BILL PROCEDURE FOR ALL THE ORDERS MADE--
CREATE PROCEDURE GENBILL @O AS CHAR(5)
AS
BEGIN
	SELECT *
	FROM BILL
	WHERE OID=@O;
END;

GENBILL 'O0001';

--PROCEDURE ON DAILY REPORT OF THE ORDERS MADE ON THE DAILY BASIS-- 
CREATE PROCEDURE DAILYREPORT
AS
BEGIN
    DECLARE @TODAY AS DATE 
	SET @TODAY =(GETDATE());
    SELECT ORDERS.OID,CUSTOMER.CID,CUSTOMER.CNAME ,CUSTOMER.PHONE, PRODUCT.PDESC ,PRODUCT.PRICE ,ORDERS.OQTY ,(ORDERS.OQTY *PRODUCT.PRICE) AS AMOUNT , ORDERS.ODATE 
	FROM ORDERS
	INNER JOIN PRODUCT
	ON ORDERS.PID = PRODUCT.PID 
	INNER JOIN CUSTOMER
	ON ORDERS.CID=CUSTOMER.CID       
    WHERE ORDERS.ODATE= (@TODAY);
    PRINT 'DAILY TRANSACTION REPORT CREATED SUCCESSFULLY.';
END;
DAILYREPORT;

--PROCEDURE ON CUSTOMER LEISURE SHOWING ALL THE ORDERS MADE BY THAT PARTICULAR CUSTOMER--
CREATE PROCEDURE CUSTOMERLEISURE @CID AS CHAR(5)
AS
BEGIN
    SELECT CUSTOMER.CID,CUSTOMER.CNAME,CUSTOMER.PHONE, ORDERS.OID,PRODUCT.PDESC ,PRODUCT.PRICE ,ORDERS.OQTY ,(ORDERS.OQTY *PRODUCT.PRICE) AS AMOUNT , ORDERS.ODATE 
	FROM ORDERS
	INNER JOIN PRODUCT
	ON ORDERS.PID = PRODUCT.PID 
	INNER JOIN CUSTOMER
	ON ORDERS.CID=CUSTOMER.CID
	WHERE CUSTOMER.CID= @CID;
    PRINT 'CUSTOMER LEISURE CREATED SUCCESSFULLY.';
END;
CUSTOMERLEISURE 'C0001';

--PROCEDURE ON SUPPLIER REPORT --
CREATE PROCEDURE SUPPLIERREPORT @SID AS CHAR(5)
AS
BEGIN
    SELECT SUPPLIER.SID ,SUPPLIER.SNAME,SUPPLIER.SPHONE, PRODUCT.PID,PRODUCT.CATEGORY ,PRODUCT.PDESC ,PRODUCT.PRICE 
	FROM SUPPLIER
	INNER JOIN PRODUCT
	ON SUPPLIER.SID = PRODUCT.SID
	WHERE SUPPLIER.SID= @SID;
    PRINT 'SUPPLIER REPORT CREATED SUCCESSFULLY.';
END;
SUPPLIERREPORT 'S0005';

--PROCEDURE ON PRODUCT REPORT--
CREATE PROCEDURE PRODUCTREPORT @PID AS CHAR(5)
AS
BEGIN
    SELECT PRODUCT.PID,PRODUCT.CATEGORY ,PRODUCT.PDESC ,PRODUCT.PRICE ,CUSTOMER.CID,CUSTOMER.CNAME,CUSTOMER.PHONE, ORDERS.OID,ORDERS.OQTY ,(ORDERS.OQTY *PRODUCT.PRICE) AS AMOUNT , ORDERS.ODATE 
	FROM ORDERS
	INNER JOIN PRODUCT
	ON ORDERS.PID = PRODUCT.PID 
	INNER JOIN CUSTOMER
	ON ORDERS.CID=CUSTOMER.CID
	WHERE PRODUCT.PID= @PID;
    PRINT 'PRODUCT REPORT CREATED SUCCESSFULLY.';
END;
PRODUCTREPORT 'P0001';
